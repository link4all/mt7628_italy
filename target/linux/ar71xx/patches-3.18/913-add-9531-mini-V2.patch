Index: linux-3.18.45/arch/mips/ath79/Kconfig
===================================================================
--- linux-3.18.45.orig/arch/mips/ath79/Kconfig
+++ linux-3.18.45/arch/mips/ath79/Kconfig
@@ -1177,6 +1177,15 @@ config ATH79_MACH_TL_WR841N_V9
        select ATH79_DEV_M25P80
        select ATH79_DEV_WMAC
 
+config ATH79_MACH_MINIV2
+       bool "MINIV2 support"
+       select SOC_QCA953X
+       select ATH79_DEV_ETH
+       select ATH79_DEV_GPIO_BUTTONS
+       select ATH79_DEV_LEDS_GPIO
+       select ATH79_DEV_M25P80
+       select ATH79_DEV_WMAC
+
 config ATH79_MACH_TL_WR941ND
 	bool "TP-LINK TL-WR941ND support"
 	select SOC_AR913X
Index: linux-3.18.45/arch/mips/ath79/Makefile
===================================================================
--- linux-3.18.45.orig/arch/mips/ath79/Makefile
+++ linux-3.18.45/arch/mips/ath79/Makefile
@@ -38,6 +38,7 @@ obj-$(CONFIG_ATH79_ROUTERBOOT)		+= route
 #
 # Machines
 #
+obj-$(CONFIG_ATH79_MACH_MINIV2)	+= mach-9531-mini-V2.o
 obj-$(CONFIG_ATH79_MACH_ALFA_AP120C)	+= mach-alfa-ap120c.o
 obj-$(CONFIG_ATH79_MACH_ALFA_AP96)	+= mach-alfa-ap96.o
 obj-$(CONFIG_ATH79_MACH_ALFA_NX)	+= mach-alfa-nx.o
Index: linux-3.18.45/arch/mips/ath79/mach-9531-mini-V2.c
===================================================================
--- /dev/null
+++ linux-3.18.45/arch/mips/ath79/mach-9531-mini-V2.c
@@ -0,0 +1,130 @@
+/*
+ *  TP-LINK TL-WR841N/ND v9/v11
+ *
+ *  Copyright (C) 2014 Matthias Schiffer <mschiffer@universe-factory.net>
+ *  Copyright (C) 2016 Cezary Jackiewicz <cezary@eko.one.pl>
+ *  Copyright (C) 2016 Stijn Segers <francesco.borromini@gmail.com>
+ *
+ *  This program is free software; you can redistribute it and/or modify it
+ *  under the terms of the GNU General Public License version 2 as published
+ *  by the Free Software Foundation.
+ */
+
+#include <linux/gpio.h>
+#include <linux/platform_device.h>
+
+#include <asm/mach-ath79/ath79.h>
+#include <asm/mach-ath79/ar71xx_regs.h>
+
+#include "common.h"
+#include "dev-eth.h"
+#include "dev-gpio-buttons.h"
+#include "dev-leds-gpio.h"
+#include "dev-m25p80.h"
+#include "dev-usb.h"
+#include "dev-wmac.h"
+#include "machtypes.h"
+#include "pci.h"
+
+
+#define MINIV2_GPIO_BTN_RESET	17
+#define MINIV2_GPIO_BTN_SIM		11
+#define MINIV2_GPIO_LED_2G		12
+#define MINIV2_GPIO_LED_LAN		4
+#define MINIV2_GPIO_LED_WAN		16
+
+
+#define MINIV2_KEYS_POLL_INTERVAL	20	/* msecs */
+#define MINIV2_KEYS_DEBOUNCE_INTERVAL (3 * MINIV2_KEYS_POLL_INTERVAL)
+
+//static const char *miniv2_part_probes[] = {
+//	"tp-link",
+//	NULL,
+//};
+
+//static struct flash_platform_data miniv2_flash_data = {
+//	.part_probes	= miniv2_part_probes,
+//};
+
+
+static struct gpio_keys_button miniv2_gpio_keys[] __initdata = {
+	{
+		.desc		= "Reset button",
+		.type		= EV_KEY,
+		.code		= KEY_RESTART,
+		.debounce_interval = MINIV2_KEYS_DEBOUNCE_INTERVAL,
+		.gpio		= MINIV2_GPIO_BTN_RESET,
+		.active_low	= 1,
+	},
+	{
+		.desc		= "sim button",
+		.type		= EV_KEY,
+		.code		= BTN_0,
+		.debounce_interval = MINIV2_KEYS_DEBOUNCE_INTERVAL,
+		.gpio		= MINIV2_GPIO_BTN_SIM,
+		.active_low	= 1,
+	},
+};
+
+static struct gpio_led miniv2_leds_gpio[] __initdata = {
+	{
+		.name		= "miniv2:2g",
+		.gpio		= MINIV2_GPIO_LED_2G,
+		.active_low	= 1,
+		.default_state = 1,
+	},/* {
+		.name		= "miniv2:lan",
+		.gpio		= MINIV2_GPIO_LED_LAN,
+		.active_low	= 1,
+	}, {
+		.name		= "miniv2:wan",
+		.gpio		= MINIV2_GPIO_LED_WAN,
+		.active_low	= 1,
+	},*/
+};
+
+static void __init miniv2_setup(void)
+{
+	//u8 *mac = (u8 *) KSEG1ADDR(0x1f01fc00);
+	u8 *ee = (u8 *) KSEG1ADDR(0x1fff1000);
+	ath79_gpio_output_select(MINIV2_GPIO_LED_LAN,QCA953X_GPIO_OUT_MUX_LED_LINK4);
+	ath79_gpio_output_select(MINIV2_GPIO_LED_WAN,QCA953X_GPIO_OUT_MUX_LED_LINK3);
+	ath79_register_m25p80(NULL);
+
+	ath79_setup_ar933x_phy4_switch(false, false);
+
+	ath79_register_mdio(0, 0x0);
+
+	/* LAN */
+	ath79_eth1_data.phy_if_mode = PHY_INTERFACE_MODE_GMII;
+	ath79_eth1_data.duplex = DUPLEX_FULL;
+	ath79_switch_data.phy_poll_mask |= BIT(4);
+	//ath79_init_mac(ath79_eth1_data.mac_addr, mac, 0);
+    ath79_init_mac(ath79_eth1_data.mac_addr, ee+2, 0);
+	ath79_register_eth(1);
+
+	/* WAN */
+	ath79_switch_data.phy4_mii_en = 1;
+	ath79_eth0_data.phy_if_mode = PHY_INTERFACE_MODE_MII;
+	ath79_eth0_data.duplex = DUPLEX_FULL;
+	ath79_eth0_data.speed = SPEED_100;
+	ath79_eth0_data.phy_mask = BIT(4);
+	//ath79_init_mac(ath79_eth0_data.mac_addr, mac, 1);
+	ath79_init_mac(ath79_eth0_data.mac_addr, ee+2, 1);
+	ath79_register_eth(0);
+
+	//ath79_init_mac(tmpmac, mac, 0);
+	ath79_register_wmac(ee, NULL);
+
+	ath79_register_leds_gpio(-1, ARRAY_SIZE(miniv2_leds_gpio),
+				 miniv2_leds_gpio);
+
+	ath79_register_gpio_keys_polled(1, MINIV2_KEYS_POLL_INTERVAL,
+					ARRAY_SIZE(miniv2_gpio_keys),
+					miniv2_gpio_keys);
+	ath79_register_usb();
+	ath79_register_pci();
+}
+
+MIPS_MACHINE(ATH79_MACH_MINIV2, "miniv2", "miniv2",
+	    miniv2_setup);
\ No newline at end of file
Index: linux-3.18.45/arch/mips/ath79/machtypes.h
===================================================================
--- linux-3.18.45.orig/arch/mips/ath79/machtypes.h
+++ linux-3.18.45/arch/mips/ath79/machtypes.h
@@ -175,6 +175,7 @@ enum ath79_mach_type {
 	ATH79_MACH_TL_WR841N_V7,	/* TP-LINK TL-WR841N/ND v7 */
 	ATH79_MACH_TL_WR841N_V8,	/* TP-LINK TL-WR841N/ND v8 */
 	ATH79_MACH_TL_WR841N_V9,	/* TP-LINK TL-WR841N/ND v9 */
+	ATH79_MACH_MINIV2,	/* 9531 MINIV2 */
 	ATH79_MACH_TL_WR841N_V11,	/* TP-LINK TL-WR841N/ND v11 */
 	ATH79_MACH_TL_WR842N_V2,	/* TP-LINK TL-WR842N/ND v2 */
 	ATH79_MACH_TL_WR941ND,		/* TP-LINK TL-WR941ND */
